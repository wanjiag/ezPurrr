[{"path":[]},{"path":"https://wanjiag.github.io/ezPurrr/articles/using-ezPurrr.html","id":"sample_row","dir":"Articles","previous_headings":"sample_*()","what":"sample_row()","title":"Example","text":"sample_row() returns one random one particular row (index argument) nested data list data frame. returning list (default), one row nested data first item list, grouping variables another item list. returning data frame (type = df argument), data frame include one row nested data, well grouping variable column identical repeated content.","code":"# In here, species and island are the grouping variables.  nest_df %>% sample_row() #> row 5 is selected randomly #> $data #> # A tibble: 68 × 6 #>    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g sex     year #>             <dbl>         <dbl>             <int>       <int> <fct>  <int> #>  1           46.5          17.9               192        3500 female  2007 #>  2           50            19.5               196        3900 male    2007 #>  3           51.3          19.2               193        3650 male    2007 #>  4           45.4          18.7               188        3525 female  2007 #>  5           52.7          19.8               197        3725 male    2007 #>  6           45.2          17.8               198        3950 female  2007 #>  7           46.1          18.2               178        3250 female  2007 #>  8           51.3          18.2               197        3750 male    2007 #>  9           46            18.9               195        4150 female  2007 #> 10           51.3          19.9               198        3700 male    2007 #> # … with 58 more rows #>  #> $island #> [1] Dream #> Levels: Biscoe Dream Torgersen #>  #> $species #> [1] Chinstrap #> Levels: Adelie Chinstrap Gentoo  nest_df %>% sample_row(index = 3) %>% head() #> $data #> # A tibble: 56 × 6 #>    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g sex     year #>             <dbl>         <dbl>             <int>       <int> <fct>  <int> #>  1           39.5          16.7               178        3250 female  2007 #>  2           37.2          18.1               178        3900 male    2007 #>  3           39.5          17.8               188        3300 female  2007 #>  4           40.9          18.9               184        3900 male    2007 #>  5           36.4          17                 195        3325 female  2007 #>  6           39.2          21.1               196        4150 male    2007 #>  7           38.8          20                 190        3950 male    2007 #>  8           42.2          18.5               180        3550 female  2007 #>  9           37.6          19.3               181        3300 female  2007 #> 10           39.8          19.1               184        4650 male    2007 #> # … with 46 more rows #>  #> $island #> [1] Dream #> Levels: Biscoe Dream Torgersen #>  #> $species #> [1] Adelie #> Levels: Adelie Chinstrap Gentoo  nest_df %>% sample_row(index = 3, type = 'df') %>% head() #> # A tibble: 6 × 8 #>   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g sex     year #>            <dbl>         <dbl>             <int>       <int> <fct>  <int> #> 1           39.5          16.7               178        3250 female  2007 #> 2           37.2          18.1               178        3900 male    2007 #> 3           39.5          17.8               188        3300 female  2007 #> 4           40.9          18.9               184        3900 male    2007 #> 5           36.4          17                 195        3325 female  2007 #> 6           39.2          21.1               196        4150 male    2007 #> # … with 2 more variables: group.island <fct>, group.species <fct>"},{"path":"https://wanjiag.github.io/ezPurrr/articles/using-ezPurrr.html","id":"sample_data","dir":"Articles","previous_headings":"sample_*()","what":"sample_data()","title":"Example","text":"sample_data() returns one random one particular data column (index argument) nested data grouping variables.","code":"nest_df %>% sample_data() #> row 5 is selected randomly #> # A tibble: 68 × 6 #>    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g sex     year #>             <dbl>         <dbl>             <int>       <int> <fct>  <int> #>  1           46.5          17.9               192        3500 female  2007 #>  2           50            19.5               196        3900 male    2007 #>  3           51.3          19.2               193        3650 male    2007 #>  4           45.4          18.7               188        3525 female  2007 #>  5           52.7          19.8               197        3725 male    2007 #>  6           45.2          17.8               198        3950 female  2007 #>  7           46.1          18.2               178        3250 female  2007 #>  8           51.3          18.2               197        3750 male    2007 #>  9           46            18.9               195        4150 female  2007 #> 10           51.3          19.9               198        3700 male    2007 #> # … with 58 more rows  nest_df %>% sample_data(index = 3) #> # A tibble: 56 × 6 #>    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g sex     year #>             <dbl>         <dbl>             <int>       <int> <fct>  <int> #>  1           39.5          16.7               178        3250 female  2007 #>  2           37.2          18.1               178        3900 male    2007 #>  3           39.5          17.8               188        3300 female  2007 #>  4           40.9          18.9               184        3900 male    2007 #>  5           36.4          17                 195        3325 female  2007 #>  6           39.2          21.1               196        4150 male    2007 #>  7           38.8          20                 190        3950 male    2007 #>  8           42.2          18.5               180        3550 female  2007 #>  9           37.6          19.3               181        3300 female  2007 #> 10           39.8          19.1               184        4650 male    2007 #> # … with 46 more rows"},{"path":"https://wanjiag.github.io/ezPurrr/articles/using-ezPurrr.html","id":"sample_group","dir":"Articles","previous_headings":"sample_*()","what":"sample_group()","title":"Example","text":"sample_group() returns one random one particular grouping columns (index argument) nested dataset data.","code":"nest_df %>% sample_group() #> row 2 is selected randomly #> # A tibble: 1 × 2 #> # Groups:   island, species [1] #>   species island #>   <fct>   <fct>  #> 1 Adelie  Biscoe  nest_df %>% sample_group(index = 3) #> # A tibble: 1 × 2 #> # Groups:   island, species [1] #>   species island #>   <fct>   <fct>  #> 1 Adelie  Dream"},{"path":[]},{"path":"https://wanjiag.github.io/ezPurrr/articles/using-ezPurrr.html","id":"broadcast-1","dir":"Articles","previous_headings":"broadcast()","what":"broadcast()","title":"Example","text":"can use sampling dataset test code want applied row, figures lm() models. Plotting:  , wrapping function, can easily broadcasted row nested dataset.  can also use modeling functions: Instead list, can also make output number (double).","code":"nest_df %>%    sample_data(index = 3) %>%    ggplot(aes(x = bill_length_mm,                            y = bill_depth_mm,                            color = body_mass_g)) +   geom_point() plotting <- function(data){   data %>% ggplot(aes(x = bill_length_mm,                              y = bill_depth_mm,                              color = body_mass_g)) +     geom_point() }  broadcasted_df = nest_df %>% broadcast(plotting)  broadcasted_df$output[[1]] #> Warning: Removed 1 rows containing missing values (geom_point). tmp_df = nest_df %>%    sample_data(index = 3)  lm(body_mass_g ~ bill_length_mm * bill_depth_mm, data = tmp_df) #>  #> Call: #> lm(formula = body_mass_g ~ bill_length_mm * bill_depth_mm, data = tmp_df) #>  #> Coefficients: #>                  (Intercept)                bill_length_mm   #>                   -2079.0346                       92.6987   #>                bill_depth_mm  bill_length_mm:bill_depth_mm   #>                     145.9699                       -0.6616  modeling <- function(data){    lm(body_mass_g ~ bill_length_mm + bill_depth_mm, data = data) }  nest_df %>% broadcast(modeling) %>% .$output #> [[1]] #>  #> Call: #> lm(formula = body_mass_g ~ bill_length_mm + bill_depth_mm, data = data) #>  #> Coefficients: #>    (Intercept)  bill_length_mm   bill_depth_mm   #>       -1161.63           47.79          163.14   #>  #>  #> [[2]] #>  #> Call: #> lm(formula = body_mass_g ~ bill_length_mm + bill_depth_mm, data = data) #>  #> Coefficients: #>    (Intercept)  bill_length_mm   bill_depth_mm   #>       -3015.76           86.27          183.06   #>  #>  #> [[3]] #>  #> Call: #> lm(formula = body_mass_g ~ bill_length_mm + bill_depth_mm, data = data) #>  #> Coefficients: #>    (Intercept)  bill_length_mm   bill_depth_mm   #>       -1622.93           80.87          120.41   #>  #>  #> [[4]] #>  #> Call: #> lm(formula = body_mass_g ~ bill_length_mm + bill_depth_mm, data = data) #>  #> Coefficients: #>    (Intercept)  bill_length_mm   bill_depth_mm   #>       -1452.12           57.64          252.96   #>  #>  #> [[5]] #>  #> Call: #> lm(formula = body_mass_g ~ bill_length_mm + bill_depth_mm, data = data) #>  #> Coefficients: #>    (Intercept)  bill_length_mm   bill_depth_mm   #>        -356.11           23.82          158.84 modeling <- function(data){   model = lm(body_mass_g ~ bill_length_mm + bill_depth_mm, data = data)   model$coefficients[2] # the slope for bill_length_mm }  nest_df %>% broadcast(modeling) %>% .$output #> [[1]] #> bill_length_mm  #>       47.78764  #>  #> [[2]] #> bill_length_mm  #>       86.27406  #>  #> [[3]] #> bill_length_mm  #>       80.86942  #>  #> [[4]] #> bill_length_mm  #>       57.64173  #>  #> [[5]] #> bill_length_mm  #>       23.82257"},{"path":"https://wanjiag.github.io/ezPurrr/articles/using-ezPurrr.html","id":"broadcast_group","dir":"Articles","previous_headings":"broadcast()","what":"broadcast_group()","title":"Example","text":"broadcast_group() allows also use grouping variables function. still develop currently works limited way. example, can include grouping variables title plots.","code":"df = nest_df %>%    sample_row(index = 3, type = 'list')  plotting = function(data, species, island){   ggplot(data, aes(x = bill_length_mm,                              y = bill_depth_mm,                              color = body_mass_g)) +     geom_point() +     labs(title = paste(species, island)) }  plotting(df$data, df$species, df$island) nest_df = nest_df %>% broadcast_group(plotting)  nest_df$output[[1]] #> Warning: Removed 1 rows containing missing values (geom_point). nest_df$output[[4]] #> Warning: Removed 1 rows containing missing values (geom_point)."},{"path":[]},{"path":"https://wanjiag.github.io/ezPurrr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wanjia Guo. Author, maintainer.","code":""},{"path":"https://wanjiag.github.io/ezPurrr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Guo W (2022). ezPurrr: Make Purrr Easier Use.. R package version 0.0.0.9000, https://wanjiag.github.io/ezPurrr/.","code":"@Manual{,   title = {ezPurrr: Make Purrr Easier To Use.},   author = {Wanjia Guo},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://wanjiag.github.io/ezPurrr/}, }"},{"path":"https://wanjiag.github.io/ezPurrr/index.html","id":"ezpurrr","dir":"","previous_headings":"","what":"Make Purrr Easier To Use.","title":"Make Purrr Easier To Use.","text":"ezPurrr facilitating package Purrr. straightforward sample functions sampling nested data set. can also easily broadcast written function rows data set. Check examples !","code":""},{"path":"https://wanjiag.github.io/ezPurrr/reference/broadcast.html","id":null,"dir":"Reference","previous_headings":"","what":"broadcasting a function to all other rows — broadcast","title":"broadcasting a function to all other rows — broadcast","text":"function return dataframe last item (named output) result broadcasting.","code":""},{"path":"https://wanjiag.github.io/ezPurrr/reference/broadcast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"broadcasting a function to all other rows — broadcast","text":"","code":"broadcast(nest_df, f, output_type = \"list\", ...)"},{"path":"https://wanjiag.github.io/ezPurrr/reference/broadcast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"broadcasting a function to all other rows — broadcast","text":"nest_df nested data frame broadcasted. Must include column dataframe type name 'data'. f function broadcasted. output_type expected output column type. default list. Options: 'list'; 'double' ... Additional arguments passed f.","code":""},{"path":"https://wanjiag.github.io/ezPurrr/reference/broadcast_group.html","id":null,"dir":"Reference","previous_headings":"","what":"broadcasting a function with grouping variables to all other rows — broadcast_group","title":"broadcasting a function with grouping variables to all other rows — broadcast_group","text":"function return dataframe last item (named output) result broadcasting.","code":""},{"path":"https://wanjiag.github.io/ezPurrr/reference/broadcast_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"broadcasting a function with grouping variables to all other rows — broadcast_group","text":"","code":"broadcast_group(nest_df, f)"},{"path":"https://wanjiag.github.io/ezPurrr/reference/broadcast_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"broadcasting a function with grouping variables to all other rows — broadcast_group","text":"nest_df nested data frame broadcasted. Must include column dataframe type name 'data'. f function broadcasted.","code":""},{"path":"https://wanjiag.github.io/ezPurrr/reference/ezPurrr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ezPurrr: Make Purrr Easier To Use. — ezPurrr-package","title":"ezPurrr: Make Purrr Easier To Use. — ezPurrr-package","text":"ezPurrr facilitating package `Purrr`. straightforward `sample` functions sampling nested data set. can also easily `broadcast` written function rows data set.","code":""},{"path":[]},{"path":"https://wanjiag.github.io/ezPurrr/reference/ezPurrr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ezPurrr: Make Purrr Easier To Use. — ezPurrr-package","text":"Maintainer: Wanjia Guo wanjiag@uoregon.edu (ORCID)","code":""},{"path":"https://wanjiag.github.io/ezPurrr/reference/sample_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling one data frame from a nested dataframe. The sampling could be done\neither randomly or a specific row could be indicated. — sample_data","title":"Sampling one data frame from a nested dataframe. The sampling could be done\neither randomly or a specific row could be indicated. — sample_data","text":"function return dataframe list data frames input nested dataframe.","code":""},{"path":"https://wanjiag.github.io/ezPurrr/reference/sample_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling one data frame from a nested dataframe. The sampling could be done\neither randomly or a specific row could be indicated. — sample_data","text":"","code":"sample_data(nest_df, index)"},{"path":"https://wanjiag.github.io/ezPurrr/reference/sample_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling one data frame from a nested dataframe. The sampling could be done\neither randomly or a specific row could be indicated. — sample_data","text":"nest_df nested dataframe sampled . right-column must dataframe type name 'data'. index Optional. index dataframe sampled . index provided, random subset returned.","code":""},{"path":"https://wanjiag.github.io/ezPurrr/reference/sample_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling one grouping variable from a nested dataframe. The sampling could be done\neither randomly or a specific row could be indicated. — sample_group","title":"Sampling one grouping variable from a nested dataframe. The sampling could be done\neither randomly or a specific row could be indicated. — sample_group","text":"function return dataframe grouping variable input nested dataframe.","code":""},{"path":"https://wanjiag.github.io/ezPurrr/reference/sample_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling one grouping variable from a nested dataframe. The sampling could be done\neither randomly or a specific row could be indicated. — sample_group","text":"","code":"sample_group(nest_df, index)"},{"path":"https://wanjiag.github.io/ezPurrr/reference/sample_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling one grouping variable from a nested dataframe. The sampling could be done\neither randomly or a specific row could be indicated. — sample_group","text":"nest_df nested dataframe sampled . right-column must dataframe type name 'data'. index Optional. index dataframe sampled . index provided, random subset returned.","code":""},{"path":"https://wanjiag.github.io/ezPurrr/reference/sample_row.html","id":null,"dir":"Reference","previous_headings":"","what":"Sampling one row from a nested dataframe. The sampling could be done\neither randomly or a specific row could be indicated. — sample_row","title":"Sampling one row from a nested dataframe. The sampling could be done\neither randomly or a specific row could be indicated. — sample_row","text":"default type return list, return data frame first item, grouping variables items list. return type indicated df, function can also return dataframe nested data, grouping variables transformed columns identical values.","code":""},{"path":"https://wanjiag.github.io/ezPurrr/reference/sample_row.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sampling one row from a nested dataframe. The sampling could be done\neither randomly or a specific row could be indicated. — sample_row","text":"","code":"sample_row(nest_df, index, type = \"list\")"},{"path":"https://wanjiag.github.io/ezPurrr/reference/sample_row.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sampling one row from a nested dataframe. The sampling could be done\neither randomly or a specific row could be indicated. — sample_row","text":"nest_df nested dataframe sampled . right-column must dataframe type name 'data'. index Optional. index dataframe sampled . index provided, random subset returned. type Optional. 'list' 'df'. type return data structure. List default.","code":""}]
